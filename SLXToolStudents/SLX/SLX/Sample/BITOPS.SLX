//*****************************************************************************
//      Module BitOperations
//*****************************************************************************

module BitOperations
	{
	int		gi, gj;
	procedure main()
		{
		int		i, j;

		i = i	| j;
		i = gi	| gj;
		i = i	| 1;
		i = gi	| 0x1000;
		i = i	| (i+j);
		i = gi	| (i+j);

		i = (i+j)	| j;
		i = (i+j)	| gj;
		i = (i+j)	| 1;
		i = (i+j)	| (i+j);

		i = 0x1000	| j;
		i = 0x1000	| gj;
		i = 0x1000	| 1;
		i = 0x1000	| (i+j);

		i |= j;
		i |= (i+j);
		i |= 1;
		i |= 0x1000;

		i = i	^ j;
		i = gi	^ gj;
		i = i	^ 1;
		i = gi	^ 0x1000;
		i = i	^ (i+j);
		i = gi	^ (i+j);

		i = (i+j)	^ j;
		i = (i+j)	^ gj;
		i = (i+j)	^ 1;
		i = (i+j)	^ (i+j);

		i = 0x1000	^ j;
		i = 0x1000	^ gj;
		i = 0x1000	^ 1;
		i = 0x1000	^ (i+j);

		i ^= j;
		i ^= (i+j);
		i ^= 1;
		i ^= 0x1000;

		i = i	& j;
		i = gi	& gj;
		i = i	& 1;
		i = gi	& 0x1000;
		i = i	& (i+j);
		i = gi	& (i+j);

		i = (i+j)	& j;
		i = (i+j)	& gj;
		i = (i+j)	& 1;
		i = (i+j)	& (i+j);

		i = 0x1000	& j;
		i = 0x1000	& gj;
		i = 0x1000	& 1;
		i = 0x1000	& (i+j);

		i &= j;
		i &= (i+j);
		i &= 1;
		i &= 0x1000;

		i = i	<< j;
		i = gi	<< gj;
		i = i	<< 1;
		i = gi	<< 17;
		i = i	<< (i+j);
		i = gi	<< (i+j);

		i = (i+j)	<< j;
		i = (i+j)	<< gj;
		i = (i+j)	<< 1;
		i = (i+j)	<< (i+j);

		i = 0x1000	<< j;
		i = 0x1000	<< gj;
		i = 0x1000	<< 1;
		i = 0x1000	<< (i+j);

		i <<= j;
		i <<= (i+j);
		i <<= 1;
		i >>= 17;

		i = i	>> j;
		i = gi	>> gj;
		i = i	>> 1;
		i = gi	>> 17;

		i = i	>> (i+j);
		i = gi	>> (i+j);

		i = (i+j)	>> j;
		i = (i+j)	>> gj;
		i = (i+j)	>> 1;
		i = (i+j)	>> (i+j);

		i = 0x1000	>> j;
		i = 0x1000	>> gj;
		i = 0x1000	>> 1;
		i = 0x1000	>> (i+j);

		i >>= j;
		i >>= (i+j);
		i >>= 1;
		i >>= 17;

		i = ~i;
		i = ~gi;
		i = ~(i+j);
		i = ~1;
	
		if (i & 1 == 0)
			i = 99;

		if (0 == i & 1)
			i = 99;

		if (i & 1 == 2)
			i = 99;

		if (2 == i & 1)
			i = 99;

//warn		i = gi	>> 0x1000;
		}
	}