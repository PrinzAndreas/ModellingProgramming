module PhoneBookDemo
	{
	class book_entry
		{
		string(20)	last_name, first_name, phone_number;
		};

	set(book_entry)
	    ranked(ascending last_name, ascending first_name)	phone_book;

	set(book_entry) ranked(ascending phone_number)  		reverse_phone_book;

	filedef keyboard name="stdin";
	filedef screen	 name="stderr";

	procedure main()
		{
		string(20)				fname, lname, no;
		pointer(book_entry)	e;

		write file=screen   "\nPart 1 - Data Entry\n\n";

		forever
			{
			read file=keyboard prompt="Please enter last name, first name, number " 
				end=part_2 err=bad_data1	(lname, fname, no);

			e = new book_entry;
			e -> last_name = lname;
			e -> first_name = fname;
			e -> phone_number = no;

			place e into phone_book;
			place e into reverse_phone_book;

			continue;

bad_data1:	write file=screen "\nInvalid input!\n\n";
			}

part_2: 

		print options=bold,underline	"Name Order\n\n";
		
		for (e = each book_entry in phone_book)
			print (e -> last_name, e -> first_name, e -> phone_number)
"_, _: _\n";

		print options=bold,underline	"Number Order\n\n";
		
		for (e = each book_entry in reverse_phone_book)
			print (e -> last_name, e -> first_name, e -> phone_number)
"_, _: _\n";


		write file=screen   "\nPart 2 - Retrieval by Name\n\n";

		close keyboard; 	// clear EOF indication
		open keyboard input;

		forever
			{
			read file=keyboard prompt="Please enter last name, first name "
				end=part_3 err=bad_data2	(lname, fname);

			e = retrieve book_entry(last_name=lname, first_name=fname) from phone_book;

			if (e != NULL)
				write file=screen (e -> phone_number)    "_\n";
			else
				write file=screen (lname, fname)    "Cannot find *, *\n";

			continue;

bad_data2:	write file=screen "\nInvalid input!\n\n";
			}

part_3: write file=screen   "\nPart 3 - Retrieval by Number\n\n";

		close keyboard; 	// clear EOF indication
		open keyboard input;
		forever
			{
			read file=keyboard prompt="Please enter a phone number"
					end=done err=bad_data3		(no);

			e = retrieve book_entry(phone_number=no) from reverse_phone_book;

			if (e != NULL)
				write file=screen (e -> last_name, e -> first_name) "*, *\n";
			else
				write file=screen (no)	    "Cannot find *\n";

			continue;

bad_data3:	write file=screen "\nInvalid input!\n\n";
			}

done:		exit(0);
		}
	}