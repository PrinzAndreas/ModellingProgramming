module aug_test
	{
	pointer(obj1)	o1;

	class obj1(in int ii)
		{
		integer 	counter = ii;
		float		time_stamp;

		pointer(ME)	pointer1;

		initial
			{
			print "obj1 initial property executed\n";
			pointer1 = ME;
			}

		final
			{
			print "obj1 final property executed\n";
			}

		report
			{
			print "obj1 report...\n\n";

			print (counter, time_stamp, pointer1)	"Counter: _  time stamp: _  pointer1: _\n";
			}
		};


	augment puck
		{
		pointer(*)	qcb_list;
		}

	procedure main
		{
		o1 = new obj1(1);
		o1 -> time_stamp = 999.0;

		report (*o1);

		print	"Setting pointer1 = NULL\n";
		o1 -> pointer1 = NULL;				// try commenting this line out

		print	"Setting pointer2 = NULL\n";
		o1 -> pointer2 = NULL;

		print	"Destroying o1\n";
		destroy o1;

		ACTIVE -> qcb_list = NULL;

		exit(0);

	augment obj1
		{
		pointer(*)	pointer2;

		initial
			{
			pointer2 = ME;

			print "obj1 augmented initial property executed\n";
			}

		final
			{
			print "obj1 augmented final property executed\n";
			}

		report
			{
			print "obj1 augmented report...\n\n";

			print (pointer2)	"pointer2: _\n";
			}	
		};

		}
	}