module test_new_execution_errors
	{
	control int	x;

	class widget
		{
		int	i;
		};

	class joe
		{
		actions
			{
			print "joe created\n";
//			wait until (x > 0);	// never satisfied
			terminate;
			}
		};

	procedure main()
		{
		pointer(*)	null_ptr,
					widget_ptr,
					puck_ptr;

		widget_ptr = new widget;
		puck_ptr = activate new joe;

//1		activate null_ptr;		// activate NULL

//2		activate widget_ptr;		// activate passive

//3		reactivate null_ptr;		// reactivate NULL

//4		reactivate widget_ptr;	// reactivate non-puck

//5		reactivate puck_ptr;	// reactivate non-waiting puck

//6		yield to null_ptr;		// yield to NULL

//7		yield to widget_ptr;		// yield to non-puck

		yield to puck_ptr;		// OK
		yield to puck_ptr;		// it's gone now

		wait;					// will wait forever
		}
	}