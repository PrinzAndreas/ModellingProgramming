// Jim Dai's Little Problem - Active Part Approach

import <h7>

module reentrant_line
    {
    rn_stream		stream1 seed=100000,
		 			stream2 seed=200000,
					stream3 seed=300000,
					stream4 seed=400000;

    control integer	number_completed;	    // quit when this reaches 10K

    facility			machine1  title = "Mach #1",
		    			machine2  title = "Mach #2";

    queue			systime  title = "System",
					q1	     title = "Stage 1",
					q2	     title = "Stage 2",
					q3	     title = "Stage 3";

	procedure main()
		{
		activate new part;
		wait until (number_completed >= 10000);
		report(system);
		exit(0);
		}

	class part
		{
		actions
			{
			advance rv_expo(stream4, 1.0);	// IAT
			activate new part;					// successor
			enqueue  systime;					// measure time thru sys

//			print (time)	"arrival at ***.***\n";

			enqueue q1;
			wait until (FNU(machine1) and (Q(q2) <= 4 or Q(q3) == 0));

			seize   machine1;
			depart  q1;
			advance rv_expo(stream1, 0.2);  // stage 1
			release machine1;

			enqueue q2;
			seize   machine2;
			depart  q2;

			advance rv_expo(stream2, 0.9);  // stage 2
			release machine2;

			enqueue q3;
			wait until (FNU(machine1) and (Q(q2) > 4 or Q(q1) == 0));

			seize   machine1;
			depart  q3;
			advance rv_expo(stream3, 0.7);  // stage 3
			release machine1;

//			print(time) 	"Exit	 at ***.***\n";

			depart  systime;		    // measure time thru sys
			number_completed += 1;
			terminate;
			}

	}	// end part class

    }	    // end module
